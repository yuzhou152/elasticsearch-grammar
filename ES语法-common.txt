TIP:
A.必须要全部小写，也不能以下划线开头，不能包含逗号。


B.数据类型：

核心数据类型（Core datatypes）

字符型（String datatype）：string
数字型（Numeric datatypes）：long, integer, short, byte, double, float
日期型（Date datatype）：date
布尔型（Boolean datatype）：boolean
二进制型（Binary datatype）：binary
复杂数据类型（Complex datatypes）
------------------------------------------------------------------------------------------------------------------------------------------

数组类型（Array datatype）：数组类型不需要专门指定数组元素的type，例如：

字符型数组: [ "one", "two" ]
整型数组：[ 1, 2 ]
数组型数组：[ 1, [ 2, 3 ]] 等价于[ 1, 2, 3 ]
对象数组：[ { "name": "Mary", "age": 12 }, { "name": "John", "age": 10 }]

------------------------------------------------------------------------------------------------------------------------------------------
对象类型（Object datatype）： object 用于单个JSON对象；
嵌套类型（Nested datatype）： nested 用于JSON数组；
地理位置类型（Geo datatypes）
地理坐标类型（Geo-point datatype）： geo_point 用于经纬度坐标；
地理形状类型（Geo-Shape datatype）： geo_shape 用于类似于多边形的复杂形状；
特定类型（Specialised datatypes）

------------------------------------------------------------------------------------------------------------------------------------------
IPv4 类型（IPv4 datatype）： ip 用于IPv4 地址；
Completion 类型（Completion datatype）： completion 提供自动补全建议；
Token count 类型（Token count datatype）： token_count 用于统计做了标记的字段的index数目，该值会一直增加，不会因为过滤条件而减少。
mapper-murmur3 类型：通过插件，可以通过 murmur3 来计算 index 的 hash 值；
附加类型（Attachment datatype）：采用 mapper-attachments 插件，可支持 attachments 索引，例如 Microsoft Office 格式，Open Document 格式，ePub, HTML 等。

------------------------------------------------------------------------------------------------------------------------------------------

C.dynamic

true：默认值。动态添加字段
strict：如果碰到陌生字段，抛出异常

------------------------------------------------------------------------------------------------------------------------------------------

D:analyzer分析器

standard    标准分析器	默认使用  删除绝大部分标点。最后，将词条小写。
simple      简单分析器		  在任何不是字母的地方分隔文本，将词条小写。
whitespace  空格分析器		  空格分析器在空格的地方划分文本。
english     语言分析器		  可以考虑指定语言的特点。
------------------------------------------------------------------------------------------------------------------------------------------

E.index
analyzed	可被当成全文来搜索
not_analyzed	被当成一个准确的值
no		完全不可被搜索

集群健康	green/yellow/red
curl -XGET http://ip:port/_cluster/health
			   _nodes/stats
			   _cluster/stats
			   index/_stats
			   _cat
curl -XGET http://ip:port/_cluster/health?level=shards&wait_for_status=green
					   level=indices		1级
					   level=shards			2级
					   wait_for_status=yellow	等到了yellow状态再回显结果


关键理念：倒排索引，提交点+段











------------------------------------------------------------------------------------------------------------------------------------------

1.1-初始化index_setting
curl -XPUT "http://ip:port/megacorp/"
{"settings":
	{"index":
		{
			"number_of_shards":5,
			考虑机器扩容
			"number_of_replicas":1
			考虑机器效率，不大于机器总量
			"translog.durability":"async",
			"translog.sync_interval":"5s"
			"blocks.onetype":true
			对onetype禁止操作
			"blocks.read":true
			对本index禁止读
			"blocks.write":true
			对本index禁止写
			"blocks.read_only":1\true
			对本index禁止读写
		}
	}
}
1.2-查询index_settings
	curl -XGET "http://ip:port/megacorp,megacorp2/_settings?pretty"
	curl -XGET "http://ip:port/_all/_settings?pretty"
1.3-初始化index_mapping
curl -XPUT "http://ip:port/megacorp/"
{"settings":
	{"index":
		{
			"number_of_shards":4,
			"number_of_replicas":3
		}
	},
"mappings":{
	"worker":
		{
			"dynamic":"true",
			"properties":{
				"name":{"type":"string","index":"analyzed","analyzer":"standard"},   
				"age":{"type":"integer","index":"not_analyzed"},
				"sex":{"type":"integer","index":"not_analyzed"},
				"addr":{"type":"string","index":"not_analyzed"},
				"date":{"type":"long","index":"not_analyzed"},
				"num":{"type":"object","dynamic":"true",
					"properties":{
						"id":{"type":"string"},
						"gender":{"type":"string"},
						"age":{"type":"long"},
						"name":{
							"type":"object",
							"properties":{
								"full":{"type":"string"},
								"first":{"type":"string"},
								"last":{"type":"string"}
							}
						}
					}
				},
				"location": {
				  "type":               "geo_point",
				  "geohash_prefix":     true, 
				  "geohash_precision":  "1km" 
				}
			}
		}
	}
}


Exmp:使用分词器

curl -XPUT 'http://localhost:9200/iktest?pretty' -d '{
"settings":{
	    "index":
		{
			"number_of_shards":1,
			"number_of_replicas":1
		},
	    "analysis" : {
            "analyzer" : {
                "ik" : {
                    "tokenizer" : "ik_max_word"
                }
            }
        }
	},
"mappings":{
	"worker":
		{
			"dynamic":"strict",
			"properties":{
				"name":{"type":"string","index":"analyzed","analyzer":"standard"},
				"age":{"type":"integer","index":"not_analyzed"},
				"sex":{"type":"integer","index":"not_analyzed"},
				"addr":{"type":"string","index":"not_analyzed"},
				"date":{"type":"long","index":"not_analyzed"},
				"num":{"type":"object","dynamic":"true"},
				"location": {"type":"geo_point"}
			}
		}
		
	}
}'

1.4-查询index_mapping
curl -XGET http://ip:port/_all/_mapping?pretty
curl -XGET http://ip:port/partment/_mapping?pretty
1.5-删除mapping
curl -XDELETE http://ip:port/partment/_mapping



























Exm：
	Tip：在kibana中直接cp进去即可运行

POST /boss/worker/_bulk
{ "index": { "_id": 1 }}
{"name":"我去他家洗脑","age":18,"sex":2,"addr":"北京","location": "40.715, -74.011","date":1507815728484}
{ "index": { "_id": 2 }}
{"name":"去上班哇，不要等了","age":19,"sex":1,"addr":"上海","location": "40.715, -74.012","date":1507651200000}
{ "index": { "_id": 3 }}
{"name":"我去他家洗澡","age":22,"sex":1,"addr":"北京","location": "40.715, -74.013","date":1505145600000}
{ "index": { "_id": 4 }}
{"name":"不要打游戏了，学习！","age":11,"sex":1,"addr":"北京","location": "40.715, -74.05","date":1505181600000}
{ "index": { "_id": 5 }}
{"name":"少抽烟，对身体不好","age":1,"sex":2,"addr":"new york","location": "40.815, -74.05","date":1505181600000}
{ "index": { "_id": 6 }}
{"name":"戒烟有益身体健康","age":88,"sex":2,"addr":"Lonton","location": "42.815, -70.05","date":1505181600000}


GET boss/_search
{
  "query": {
    "bool": {
      "filter": {
         "geo_distance": {
          "distance": "10km", 
          "location": { 
            "lat":  40.715,
            "lon": -73.988
          }
        }
      }
    }
  },
  "sort": [
    {
      "_geo_distance": {
        "location": { 
          "lat":  40.715,
          "lon": -73.998
        },
        "order":         "asc",
        "unit":          "km", 
        "distance_type": "plane" 
      }
    }
  ],
  "aggs": {
    "new_york": {
      "geohash_grid": { 
        "field":     "location",
        "precision": 5
      },
      "aggs": {
        "cell": { 
          "geo_bounds": {
            "field": "location"
          }
        }
      }
    }
  }
}

PUT boss
{"settings":
	{
	    "index":
		{
			"number_of_shards":5,
			"number_of_replicas":2
		},
	    "analysis" : {
            "analyzer" : {
                "ik" : {
                    "tokenizer" : "ik_max_word"
                }
            }
        }
	},
"mappings":{
	"worker":
		{
			"dynamic":"strict",
			"properties":{
				"name":{"type":"string","index":"analyzed","analyzer":"standard"},   
				"age":{"type":"integer","index":"not_analyzed"},
				"sex":{"type":"integer","index":"not_analyzed"},
				"addr":{"type":"string","index":"not_analyzed"},
				"date":{"type":"long","index":"not_analyzed"},
				"num":{"type":"object","dynamic":"true"},
				"location": {"type":"geo_point"},
				"shape":{"type": "geo_shape"}
			}
		}
		
	}
}

DELETE boss